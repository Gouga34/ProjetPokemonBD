class Utilisateur
{
	attribute string login;
	attribute string mdp;
	attribute string mail;
	attribute boolean type;
	
	relationship Set<Terme> possede inverse Terme::estPossedePar;
	relationship Set<Concept> possede inverse Concept::estPossedePar;
	relationship Set<Synonyme> possede inverse Synonyme::estPossedePar;
};

class Terme{

	attribute string nomTerme;
	attribute string description;

	relationship Utilisateur estPossedePar inverse Utilisateur::possede;
	relationship Set<Synonyme> aPourSynonyme inverse Synonyme::estSynonyme;
	relationship Concept designe inverse Concept::estDesigne;
};

class Synonyme{

	attribute string nomSynonyme;
	
	relationship Vedette estSynonyme inverse Vedette::aPourSynonyme;
	relationship Utilisateur estPossedePar inverse Utilisateur::possede;
};

class Concept
{
	attribute string nomConcept;
	attribute string description;
	
	relationship Set<Concept> estParent inverse aPourParent;
	relationship Set<Concept> aPourParent inverse estParent;
	relationship Utilisateur estPossedePar inverse Utilisateur::possede;
	relationship Vedette estDesigne inverse Vedette::designe;
};


